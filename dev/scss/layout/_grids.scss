@mixin flex-align-classes {
    .flex-x {
        &.align {
            &-left {
                justify-content: flex-start;
            }

            &-right {
                justify-content: flex-end;
            }

            &-center {
                justify-content: center;
            }

            &-justify {
                justify-content: space-between;
            }

            &-spaced {
                justify-content: space-around;
            }

            &-evenly {
                justify-content: space-evenly;
            }

            &-top {
                align-items: flex-start;
            }

            &-middle {
                align-items: center;
            }

            &-bottom {
                align-items: flex-end;
            }
        }

        .self {
            &-top {
                align-self: flex-start;
            }

            &-bottom {
                align-self: flex-end;
            }

            &-middle {
                align-self: center;
            }

            &-stretch {
                align-self: stretch;
            }
        }
    }

    .flex-y {
        &.align {
            &-top {
                justify-content: flex-start;
            }

            &-bottom {
                justify-content: flex-end;
            }

            &-middle {
                justify-content: center;
            }

            &-justify {
                justify-content: space-between;
            }

            &-spaced {
                justify-content: space-around;
            }

            &-evenly {
                justify-content: space-evenly;
            }

            &-left {
                align-items: flex-start;
            }

            &-center {
                align-items: center;
            }

            &-right {
                align-items: flex-end;
            }
        }

        .self {
            &-left {
                align-self: flex-start;
            }

            &-right {
                align-self: flex-end;
            }

            &-center {
                align-self: center;
            }

            &-stretch {
                align-self: stretch;
            }
        }
    }

    .cell {
        > .flex-x,
        > .flex-y {
            height: 100%;
        }
    }
}

// flexbox container
@mixin as-flex-x {
    // --flex-align: center;
    // --flex-justify: flex-start;
    display: flex;
    flex-grow: 1;
    flex-shrink: 1;
    flex-basis: 0;
    flex-direction: row;
    justify-content: flex-start;
    align-items: center;
}

@mixin as-flex-y {
    // --flex-align: center;
    // --flex-justify: flex-start;
    display: flex;
    flex-grow: 1;
    flex-shrink: 1;
    flex-basis: 0;
    flex-direction: column;
    justify-content: flex-start;
    align-items: center;
}

.flex-x {
    @include as-flex-x;
}

.flex-y {
    @include as-flex-y;
}

@include flex-align-classes;

$base-margin-value: 5px;
$margin-multipliers: (1, 2, 3, 4, 5);

@mixin margin-classes {
    @for $i from 1 through length($margin-multipliers) {
        $res: strip-unit($base-margin-value) * -get-value($margin-multipliers, $i);

        .add-margin-x-x#{-get-value($margin-multipliers, $i)} {
            margin-right: rem($res);
            margin-left: rem($res);
        }

        .add-margin-y-x#{-get-value($margin-multipliers, $i)} {
            margin-top: rem($res);
            margin-bottom: rem($res);
        }

        .add-margin-l-x#{-get-value($margin-multipliers, $i)} {
            margin-left: rem($res);
        }

        .add-margin-r-x#{-get-value($margin-multipliers, $i)} {
            margin-right: rem($res);
        }

        .add-margin-t-x#{-get-value($margin-multipliers, $i)} {
            margin-top: rem($res);
        }

        .add-margin-b-x#{-get-value($margin-multipliers, $i)} {
            margin-bottom: rem($res);
        }
    }

    .no-margin-x {
        margin-right: 0;
        margin-left: 0;
    }

    .no-margin-y {
        margin-top: 0;
        margin-bottom: 0;
    }

    .no-margin-l {
        margin-left: 0;
    }

    .no-margin-r {
        margin-right: 0;
    }

    .no-margin-t {
        margin-top: 0;
    }

    .no-margin-b {
        margin-bottom: 0;
    }
}

$base-padding-value: 5px;
$padding-multipliers: (1, 2, 3, 4, 5);

@mixin padding-classes {
    @for $i from 1 through length($padding-multipliers) {
        $res: strip-unit($base-padding-value) * -get-value($padding-multipliers, $i);

        .add-padding-x-x#{-get-value($padding-multipliers, $i)} {
            padding-right: rem($res);
            padding-left: rem($res);
        }

        .add-padding-y-x#{-get-value($padding-multipliers, $i)} {
            padding-top: rem($res);
            padding-bottom: rem($res);
        }

        .add-padding-l-x#{-get-value($padding-multipliers, $i)} {
            padding-left: rem($res);
        }

        .add-padding-r-x#{-get-value($padding-multipliers, $i)} {
            padding-right: rem($res);
        }

        .add-padding-t-x#{-get-value($padding-multipliers, $i)} {
            padding-top: rem($res);
        }

        .add-padding-b-x#{-get-value($padding-multipliers, $i)} {
            padding-bottom: rem($res);
        }
    }

    .no-padding-x {
        padding-right: 0;
        padding-left: 0;
    }

    .no-padding-y {
        padding-top: 0;
        padding-bottom: 0;
    }

    .no-padding-l {
        padding-left: 0;
    }

    .no-padding-r {
        padding-right: 0;
    }

    .no-padding-t {
        padding-top: 0;
    }

    .no-padding-b {
        padding-bottom: 0;
    }
}

@include margin-classes;
@include padding-classes;
